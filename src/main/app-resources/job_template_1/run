#!/bin/bash

# ============================================================================                                                                                                     
# $Id$                                                                                                                                                                             
#                                                                                                                                                                                  
# $Revision$                                                                                                                                                                       
# $Date$                                                                                                                                                                           
# $LastChangedBy$                                                                                                                                                                  
# ============================================================================                                                                                                     
# DESCRIPTION                                                                                                                                                                      
# ============================================================================                                                                                                     
# PROJECT       : SenSyF                                                                                                                                                           
# COMPANY       : DEIMOS Engenharia S.A.                                                                                                                                           
# COMPONENT     : Streaming Executables                                                                                                                                            
# LANGUAGE      : Bash                                                                                                                                                             
# ----------------------------------------------------------------------------                                                                                                     
# PURPOSE                                                                                                                                                                          
#                                                                                                                                                                                  
# This file is the streaming executable for the Job 1 of SDK-TS-pilot.
# ========================================================================== #                                                                                                     

# source the ciop functions (e.g. ciop-log)
source ${ciop_job_include}

# define the exit codes
SUCCESS=0
ERR_NOINPUT=1
ERR_NOPARAMS=2
ERR_GDAL=4
ERR_COPY=5
ERR_PYTHON=6

# add a trap to exit gracefully
function cleanExit ()
{
   local retval=$?
   local msg="" 
   case "$retval" in
     $SUCCESS)      msg="Processing successfully concluded";;
     $ERR_NOPARAMS) msg="Outout format not defined";;
     $ERR_GDAL)    msg="Graph processing of job ${JOBNAME} failed (exit code $res)";;
     *)             msg="Unknown error";;
   esac
   [ "$retval" != "0" ] && ciop-log "ERROR" "Error $retval - $msg, processing aborted" || ciop-log "INFO" "$msg" 
   exit $retval
}
trap cleanExit EXIT

# add job1 executable to PATH
export PATH=/application/job_template_1/bin/:$PATH

# retrieve the parameters value from workflow or job default value                                                                                                                 
inputKML=`ciop-getparam inputKML`

# run a check on the format value                                                                                                                                                  
[ -z "$inputKML" ] && exit $ERR_NOPARAMS

# create the input directory
mkdir -p $TMPDIR/inputs/
export INPUTDIR=$TMPDIR/inputs/

# create rois directory
mkdir -p $TMPDIR/rois/
export rois_directory=$TMPDIR/rois/

# create the output directory
mkdir -p $TMPDIR/outputs/
export OUTPUTDIR=$TMPDIR/outputs/

#read inputs
while read inputs_from_catalogue
    do
	ciop-log "INFO" "ciop-copy -f -o $INPUTDIR $inputs_from_catalogue"
	INPUTPRODUCT=`ciop-copy -f -o $INPUTDIR $inputs_from_catalogue` >/dev/null
	[ "$?" == "0" ] || exit $ERR_COPY
	ROISDIR=`ciop-copy -f -O $rois_directory $inputKML` >/dev/null
	[ "$?" == "0" ] || exit $ERR_COPY

	JOB1 $INPUTPRODUCT $ROISDIR $OUTPUTDIR
	[ "$?" == "0" ] || exit $ERR_PYTHON

	# compress the output
	product_name=`basename $INPUTPRODUCT`
	cd $OUTPUTDIR
	tar cvzf $OUTPUTDIR/$product_name.tar.gz $product_name 

	# publish outputs                                                                                                                                                         
	ciop-publish $OUTPUTDIR/$product_name.tar.gz

	# clean output directory
	rm -rf $OUTPUTDIR/*
    done
